% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlottingFunctions.R
\name{plotSurface1d}
\alias{plotSurface1d}
\title{Plot posterior predictive exposure response surface for an exposure}
\usage{
plotSurface1d(
  NLmod,
  X,
  C,
  j1,
  j2,
  gridLength = 100,
  quantile_j2,
  quantile_rest = 0.5,
  ...
)
}
\arguments{
\item{NLmod}{The fitted model}

\item{X}{an n by p matrix of exposures to evaluate. These should be continuous.}

\item{C}{An n by q matrix of additional covariates to adjust for.}

\item{j1}{The exposure for which we will plot the exposure response function}

\item{j2}{The second exposure which we will fix at a certain value. This should
be a secondary exposure of interest in the sense that we want to see
if the exposure response curve of j1 is different at different levels of
j2 (i.e interaction)}

\item{gridLength}{The number of points to evaluate the curve at. More points make for a smoother curve,
but also increase the computation time associated with calculating the curve}

\item{quantile_j2}{The quantile at which we will fix exposure j2}

\item{quantile_rest}{The quantile at which we will fix the remaining exposures}

\item{...}{Plotting parameters to be passed on such as ylim, ylab, main, etc.}
}
\description{
This function takes in an object which is a model from the NLint function
and plots the exposure response curve and pointwise 95% credible interval
band for exposure j1, while fixing exposure j2 at quantile_j2, the
remaining exposures at quantile_rest, and the covariates at their mean
}
\examples{

n = 200
p = 10
pc = 1

sigma = matrix(0.3, p, p)
diag(sigma) = 1
X = rmvnorm(n, mean=rep(0,p), sigma = sigma)

C = matrix(rnorm(n*pc), nrow=n)

TrueH = function(X) {
  return(0.5*(X[,2]*X[,3]) - 0.6*(X[,4]^2 * X[,5]))
}

Y = 5 + C + TrueH(X) + rnorm(n)

NLmod = NLint(Y=Y, X=X, C=C)

par(mfrow=c(1,2), pty='s')
plotSurface1d(NLmod = NLmod, X=X, C=C, j1=4, j2=5,
              gridLength=30, quantile_j2=0.2, quantile_rest = 0.5)
plotSurface1d(NLmod = NLmod, X=X, C=C, j1=4, j2=5,
              gridLength=30, quantile_j2=0.8, quantile_rest = 0.5)
}
